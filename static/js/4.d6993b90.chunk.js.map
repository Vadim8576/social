{"version":3,"sources":["utils/validators/validators.js","components/common/formsControls/formsControls.js","components/common/formsControls/formsControls.module.css","hoc/withAuthRedirect.js","components/Pages/Profile/ProfileInfo/profileInfo.module.css","components/img/UserPhoto.jpg","components/Pages/Profile/Posts/post.module.css","components/Pages/Profile/profile.module.css","components/Pages/Profile/Posts/post.jsx","components/Pages/Profile/profile.jsx","components/Pages/Profile/ProfileInfo/ProfileStatus.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Pages/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Pages/Profile/ProfileInfo/ProfileInfo.jsx","components/Pages/Profile/profileContainer.jsx"],"names":["requiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","css","formControl","Input","module","exports","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Post","profile","item","photos","src","small","UserNoFoto","alt","message","likes","likesCount","maxLength10","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","postsWrapper","addPost","Field","placeholder","name","component","validate","addPostBtn","Profile","memo","console","log","post","posts","map","el","key","id","profilePage","toString","formData","postText","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profileWrapper","profilePhotoWrapper","profilePhoto","profileInfo","fullName","contacts","keys","items","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getUserStatus","staus","compose","newPostText","setUserProfile","withRouter"],"mappings":"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","file":"static/js/4.d6993b90.chunk.js","sourcesContent":["\r\n// requiredField - поле, обязательное для заполнения\r\nexport const requiredField = value => {\r\n    if(value) return undefined;\r\n    return 'Обязательное поле!';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length>maxLength) return `Не может привышать ${maxLength} символов`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport css from './formsControls.module.css';\r\n\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={css.formControl + (hasError?' '+css.error:'')}>\r\n            <div>\r\n                {/* Почему ...input см. в документации к redux-form */}\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={css.formControl + (hasError?' '+css.error:'')}>\r\n            <div>\r\n                {/* Почему ...input см. в документации к redux-form */}\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__1li7W\",\"error\":\"formsControls_error__3s6AV\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n// это HOC - компонент высшего порядка (Hight Order Component)\r\n// HOC - функция, которая принимет компонент и возвращает компонент\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            // Если не залогинился redirect на компонент Login\r\n            if(!this.props.isAuth) return <Redirect to={'/Login'} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"profileInfo_addPost__I97v2\",\"status\":\"profileInfo_status__lNO1l\",\"profileWrapper\":\"profileInfo_profileWrapper__3s4dj\",\"profilePhotoWrapper\":\"profileInfo_profilePhotoWrapper__1Nngu\",\"profileInfo\":\"profileInfo_profileInfo__3eJY-\",\"profilePhoto\":\"profileInfo_profilePhoto__2VDQg\"};","module.exports = __webpack_public_path__ + \"static/media/UserPhoto.b5a04f51.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__3M5Xw\",\"likes\":\"post_likes__22OPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"profile_addPost__BdMGd\",\"postsWrapper\":\"profile_postsWrapper__1jZQ4\",\"posts\":\"profile_posts__iMEAr\",\"addPostBtn\":\"profile_addPostBtn__2LVb3\"};","import React from 'react';\r\nimport css from './post.module.css';\r\nimport Preloader from '../../../common/preloader/preloader';\r\nimport UserNoFoto from '../../../img/UserPhoto.jpg';\r\n\r\n\r\nconst Post = (props) => {\r\n    // debugger;\r\n    // if(props.profile.photos) console.log(props.profile.photos);\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    } \r\n    return (  \r\n    <div className={css.item}>\r\n        {/* <img src={logo} className={css.logo} alt=''/> */}\r\n        {props.profile.photos && <img src={props.profile.photos.small || UserNoFoto} alt=\"profile-photo\"/>}\r\n        <span>{props.message}</span>\r\n        <span className={css.likes}>likes {props.likesCount}</span>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Posts/post';\r\nimport css from './profile.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formsControls/formsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={css.postsWrapper}> \r\n                <div className={css.addPost}>\r\n                    <Field placeholder={'Введите текст поста'} name={'postText'} component={Textarea}\r\n                        validate={[requiredField, maxLength10]} />\r\n                    <div className={css.addPostBtn}>\r\n                        <button>Опубликовать</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n// { form: 'postform' } это уникальное имя формы, так как форм может быть много\r\nconst PostReduxForm = reduxForm({ form: 'postform' })(PostForm)\r\n\r\n\r\n\r\n// если использовать классовый компонент:\r\n// если использовать PureComponent, оптимизацию вручную делать не нужно\r\n// shouldComponentUpdate (метод жизненного цикла) можно удалить\r\n\r\n// для функционального компонента для оптимизации, оборачиваем ее в memo\r\n\r\nconst Profile = React.memo(props => {\r\n\r\n    // опитимизация. Компонент рендерится 1 раз, если без этой функции - 3 раза.\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     // возвращает true, если props`ы и statы не равны и рендерится\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n\r\n  \r\n    console.log('компонент Profile');\r\n\r\n    let post = props.posts\r\n        .map((el) =>\r\n        <Post key={el.id} profile={props.profilePage.profile} message={el.message} likesCount={el.likesCount.toString()} />);\r\n    \r\n    const onSubmit = (formData) => {\r\n        console.log(formData.postText);\r\n        props.addPost(formData.postText);\r\n    }\r\n    return (\r\n        <>\r\n            <PostReduxForm onSubmit={onSubmit} />\r\n            <div className={css.postsWrapper}>\r\n                <div className={css.posts}>\r\n                    {post}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n});\r\n\r\nexport default Profile;","import React from 'react';\r\nimport css from './profileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        // проверка нужна, чтобы не зациклить\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState( {status: this.props.status} )\r\n        }\r\n    }\r\n\r\n    // Если здесь создать эту функцию обычным способом, потеряется контекст, поэтому делаем стрелочную функцию\r\n    activateEditMode = () => {\r\n        console.log(this.state.editMode); // выведет false\r\n\r\n        // устанавливаем новый локальный state для перерисовки компонента\r\n        // если менять state напрямую, не будет перерисовки (this.state.editMode = true;)\r\n        this.setState( {editMode: true} );\r\n\r\n        console.log(this.state.editMode); // тоже выведет false, так как setState асинхронна\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState( {editMode: false} );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'пусто'}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={ this.onStatusChange } autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status} />\r\n                </div>\r\n            }\r\n        </>)\r\n    };\r\n}\r\n\r\nexport default ProfileStatus;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\r\nimport css from './profileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    // Локальный state (Hook). Установить значение по умолчанию false. Возвращает массив из двух элементов\r\n    // в первом элементе editMode хранится значение (по умолчанию мы установили false),\r\n    // во втором элементе setEditMode хранится функция, которая меняет это значение.\r\n    // при необходимости используется столько state, сколько нужно\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // выполняет функцию, переданную в него, после того,\r\n    // как произойдет отрисовка, наподобии componentDidUpdate = (prevProps, prevState)\r\n    // это hook\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n\r\n    }, [props.status] ); // в [] указываются зависимости, если их нет, useEffect вызовется один раз\r\n    // если [] не указывать, useEffect будет вызываться при каждой отрисовке\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    \r\n    return (\r\n    <>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || 'пусто'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={status} />\r\n            </div>\r\n        }\r\n    </>)\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport css from './profileInfo.module.css';\r\nimport Preloader from '../../../common/preloader/preloader';\r\nimport UserNoFoto from '../../../img/UserPhoto.jpg';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    } \r\n\r\n    return (\r\n        <div className={css.profileWrapper}> \r\n            <div className={css.profilePhotoWrapper}>\r\n                <div className={css.profilePhoto}>\r\n                 {props.profile.photos &&<img src={props.profile.photos.small || UserNoFoto} alt=\"profile-photo\"/>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={css.profileInfo}>\r\n                <div className={css.fullName}><h2>{props.profile.fullName}</h2></div>    \r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                           \r\n                Мои контакты:\r\n                {props.profile.contacts && \r\n                    Object.keys(props.profile.contacts)\r\n                        .map(items => <div>{items}: {props.profile.contacts[items]}</div>)}\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Profile from './profile';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { connect } from 'react-redux';\r\nimport { addPost, setUserProfile, getUserProfile, getUserStatus, updateStatus } from '../../Redux/profileReducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport withAuthRedirect from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        // 6446 - мой ID\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId; //по умолчанию запрашиваем свою страницу\r\n            // если и сейчас нет userId, редирект на логин\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        \r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n        \r\n    }\r\n\r\n    render() {\r\n        if(!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n        }\r\n        return (\r\n           <>\r\n                <ProfileInfo {...this.props} staus={this.props.status}\r\n                    updateStatus={this.props.updateStatus} />\r\n                <Profile {...this.props} />  \r\n           </>      \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// это HOC - компонент высшего порядка (Hight Order Component)\r\n// оборачиваем им ProfileContainer для того чтобы вынести логику Редиректа\r\n// и использовать ее в других компонентах\r\n// компонент ProfileContainer стал с (with) AuthRedirect`ом\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n// ProfileContainer должен получить данные из URLa,\r\n// поэтому засовываем его в функцию withRouter, которая возвращает еще один компонент - \r\n// WithUrlDataContainerComponent, который и закинет в ProfileContainer данные из URLa\r\n// Это тоже HOC\r\n\r\n// компонент AuthRedirectComponent стала с (with) Router`ом\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n\r\n// connect -  тоже HOC\r\n// export default connect(mapStateToProps, {updateNewPostText, addPost, setUserProfile, getUserProfile})(WithUrlDataContainerComponent);\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, setUserProfile, getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}