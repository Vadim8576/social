{"version":3,"sources":["serviceWorker.js","components/Redux/appReducer.js","components/Redux/reduxStore.js","components/Header/header.jsx","components/Header/headerContainer.jsx","components/Navigation/NavItem/navItem.jsx","components/Navigation/navigation.jsx","components/Pages/News/News.jsx","components/Pages/Fotos/Fotos.jsx","hoc/withSuspense.js","App.js","index.js","components/Redux/authReducer.js","components/Header/header.module.css","components/Navigation/NavItem/navItem.module.css","components/common/preloader/preloader.jsx","utils/objectHelper.js","components/Redux/usersReducer.js","components/Redux/profileReducer.js","api/api.js","components/Redux/dialogsReducer.js","components/Navigation/navigation.module.css","components/img/loader.gif"],"names":["Boolean","window","location","hostname","match","initialState","initialized","appReducer","state","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","css","header","headerLogo","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","NavItem","item","link","activeClassName","active","Navigation","nav","News","Fotos","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initializeApp","path","render","component","AppContainer","dispatch","promise","Authentication","Promise","all","then","SamuraiJsApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","userId","email","setAuthUserData","payload","a","authAPI","me","response","data","id","resultCode","password","rememberMe","stopSubmit","_error","module","exports","Preloader","src","preloader","alt","style","width","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingProgress","isProgress","requestUsers","usersAPI","getUsers","totalCount","loadMoreUsers","page","followUser","followToUser","unfollowUser","unfollowToUser","userReducer","filter","followed","posts","likesCount","profile","status","addPost","newPost","setUserProfile","setStatus","getUserProfile","getProfile","getUserStatus","profileAPI","getStatus","responce","updateStatus","p","postId","instanse","axios","withCredentials","baseURL","headers","get","post","delete","warn","put","name","messages","sendMessageActionCreator","newMessage","body"],"mappings":"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","file":"static/js/main.bdbeb250.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import { authAPI } from '../../api/api';\r\n// import { stopSubmit } from 'redux-form';\r\nimport { Authentication } from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n// изменяем только копию объекта state\r\n// оператор ... как бы развертывает объект state и делает его копию\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n               initialized: true\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n//ActoinCreators:\r\n\r\nexport const initializedSuccess = () => ( {type: INITIALIZED_SUCCESS} );\r\n\r\n\r\n// у Димыча называется getAuthUserData\r\nexport const initializeApp = () => (dispatch) => {\r\n    // Thunk`a Authentication возвращает Promise\r\n    let promise = dispatch(Authentication());\r\n\r\n    // если нужно дождаться нескольких запросов, помещаем их в массив Промисов\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\n// Это настройка Redux DevTools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n\r\n  \r\n// Использовать это создание store, если не юзать Redux DevTools\r\n// let store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n// Применяя параметр applyMiddleware,\r\n// мы говорим Store - прими промежуточные слои\r\n\r\n// window.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport css from './header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n// import Preloader from '../common/preloader/preloader';\r\n// import UserNoFoto from '../img/UserPhoto.jpg';\r\n\r\nconst Header = (props) => {\r\n    // debugger;\r\n    // if(!props.profile) {\r\n    //     return <Preloader />\r\n    // } \r\n    return (\r\n        <div className={css.header}>\r\n            <div className={css.headerLogo}>\r\n                {/* <img src={logo} className={css.logo} alt=''/> */}\r\n                {/* {props.profile.photos &&<img src={props.profile.photos.small || UserNoFoto} alt=\"profile-photo\"/>} */}\r\n            </div>\r\n            <div className={css.loginBlock}>\r\n                {props.isAuth?\r\n                    <div>\r\n                        {props.login}\r\n                        <div><button onClick={props.logout}>Выйти</button></div>\r\n                    </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from './../Redux/authReducer';\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  \r\n    render() {     \r\n        return (\r\n            <Header {...this.props} />\r\n            )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n   \r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport css from './navItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst NavItem = (props) => {\r\n    // console.log(css.active);\r\n    return (  \r\n        \r\n        <li className={css.item}>\r\n            {/* NavLink - меняет URL без перезагрузки страницы */}\r\n            <NavLink to={props.link} activeClassName={css.active}>{props.item}</NavLink>\r\n        </li> \r\n    );\r\n}\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport NavItem from './NavItem/navItem';\r\nimport css from './navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className={css.nav}>\r\n            <ul>\r\n                <NavItem link='/profile' item='Профиль'/>\r\n                <NavItem link='/dialogs' item='Сообщения'/>\r\n                <NavItem link='/users' item='Пользователи'/>\r\n                <NavItem link='/news' item='Новости'/>\r\n                <NavItem link='/foto' item='Фотографии'/>\r\n                <NavItem link='/setting' item='Настройки'/>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport css from './news.module.css';\r\n\r\nconst News = (props) => {\r\n    return (  \r\n    <div>\r\n        Страница новостей\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport css from './fotos.module.css';\r\n\r\nconst Fotos = (props) => {\r\n    return (  \r\n    <div>\r\n        Страница с фотографиями\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Fotos;","import React from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n   return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n   }\r\n}\r\n","import React from 'react';\r\nimport HeaderContainer from './components/Header/headerContainer';\r\nimport Navigation from './components/Navigation/navigation';\r\nimport News from './components/Pages/News/News';\r\nimport Fotos from './components/Pages/Fotos/Fotos';\r\nimport './App.css';\r\nimport { initializeApp } from '../src/components/Redux/appReducer';\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/preloader/preloader';\r\nimport store from './components/Redux/reduxStore'\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Provider, connect } from 'react-redux';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\n// Ленивая загрузка React.lazy, suspense - изучить\r\n// import DialogsContainer from './components/Pages/Dialogs/dialogsContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Pages/Dialogs/dialogsContainer'));\r\n\r\n// import ProfileContainer from './components/Pages/Profile/profileContainer';\r\nconst ProfileContainer = React.lazy(() => import('./components/Pages/Profile/profileContainer'));\r\n\r\n// import UsersContainer from './components/Pages/Users/usersContainer';\r\nconst UsersContainer = React.lazy(() => import('./components/Pages/Users/usersContainer'));\r\n\r\n// import LoginPage from './components/Login/Login';\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n\r\n    this.props.initializeApp();\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    // если еще не все загрузилось, покажем Прелоадер\r\n    if(!this.props.initialized) return <Preloader />\r\n\r\n    return (    \r\n      <div className='App'>\r\n          <HeaderContainer />\r\n          <div className='wrapper'>\r\n            <Navigation />\r\n  \r\n            <div className='content_wrapper'>\r\n              {/* Route следит за адресной строкой. Когда адрес равен '/dialogs', рендерит тег <Dialogs /> */}\r\n              <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\r\n  \r\n              {/* благодаря withRouter появились новые параменты:\r\n              location и match (см. console)\r\n              получаем парамерт match.params.userId */}\r\n              {/* console.log(this.props); */}\r\n  \r\n              {/* вопросительный знак означает, что параметр не обязителен */}\r\n              <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\r\n  \r\n              <Route path='/users' render={withSuspense(UsersContainer)} />\r\n  \r\n              <Route path='/login' render={withSuspense(LoginPage)} />\r\n  \r\n              <Route path='/news' component={News} />\r\n              <Route path='/foto' component={Fotos} />    \r\n            </div>  \r\n          </div>    \r\n      </div>   \r\n    );\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    connect(mapStateToProps, {initializeApp})(App)\r\n);\r\n\r\n\r\nconst SamuraiJsApp = (props) => {\r\n  return <BrowserRouter>   \r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n          </BrowserRouter>\r\n}\r\n\r\n\r\nexport default SamuraiJsApp;","import './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './components/Redux/reduxStore'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport SamuraiJsApp from './App';\r\n\r\n\r\n// Компоненты обернутые <BrowserRouter>, могут использовать Контекст, созданный им.\r\n    // ReactDOM.render(\r\n    //     <BrowserRouter>   \r\n    //         <Provider store={store}>\r\n    //             <App />\r\n    //         </Provider>\r\n    //     </BrowserRouter>, document.getElementById('root'));\r\n\r\n    ReactDOM.render(\r\n        <SamuraiJsApp />, document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n","import { authAPI } from './../../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n// изменяем только копию объекта state\r\n// оператор ... как бы развертывает объект state и делает его копию\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n               ...action.payload\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n//ActoinCreators:\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ( {type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}} );\r\n\r\n\r\n// у Димыча называется getAuthUserData\r\nexport const Authentication = () => async (dispatch) => {\r\n    \r\n    let response = await authAPI.me();\r\n        \r\n    let {id, email, login} = response.data;\r\n    if(response.resultCode === 0) {\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n        \r\n    if(response.resultCode === 0) {\r\n        // после залогинивания, снова вызываем thunk`у Authentication\r\n        dispatch(Authentication()); // у Димыча называется getAuthUserData\r\n    } else {\r\n        // let action = stopSubmit('login', {email: 'Неверный email'});\r\n        let action = stopSubmit('login', {_error: 'email или password введены не верно!'}); //stopSubmit - Экшн криейтор из redux-form\r\n        dispatch(action);\r\n    }\r\n        \r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n    let resolve = await authAPI.logout();\r\n        \r\n    if(resolve.resultCode === 0) {\r\n        //когда вылогинились - все данные в state\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n   \r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"header_logo__7fERD\",\"header\":\"header_header__1Q53l\",\"headerLogo\":\"header_headerLogo__1jeUr\",\"loginBlock\":\"header_loginBlock__3y9FZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"navItem_item__3OMbj\",\"active\":\"navItem_active__1t7Ul\"};","import React from 'react';\r\nimport preloader from '../../img/loader.gif';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt='preloader' style={{width: '50px'}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if(u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from './../../api/api';\r\nimport { updateObjectInArray } from '../../utils/objectHelper';\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst LOAD_MORE = 'LOAD_MORE';\r\n\r\n\r\n// isFetching - идет загрузка?\r\n// followingInProgress - идет процесс подписки на пользователя.\r\n// если да - прячем кнопку \"подписаться\"\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\n// isFetching -  получение данных. Показывать крутилку или нет (Preloader)\r\n// followingInProgress - идет процесс подписки или нет Boolean\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n// изменяем только копию объекта state\r\n// оператор ... как бы развертывает объект state и делает его копию\r\n    switch(action.type) {\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isProgress\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n            case SET_USERS:\r\n                // в копии state.users добавляем всех action.users,\r\n                // которые пришли с сервера\\\r\n                return {\r\n                    ...state, users: action.users\r\n                };\r\n            case LOAD_MORE:\r\n                return {\r\n                    ...state,\r\n                    users: [\r\n                        ...state.users, ...action.users\r\n                    ] \r\n                };\r\n            case SET_CURRENT_PAGE:\r\n                return {\r\n                    ...state, currentPage: action.currentPage\r\n                };\r\n            case SET_TOTAL_USERS_COUNT:\r\n                return {\r\n                    ...state, totalUsersCount: action.totalCount\r\n                };\r\n            case TOGGLE_IS_FETCHING:\r\n                \r\n                return {\r\n                    ...state, isFetching: action.isFetching\r\n                };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n//ActoinCreators:\r\n\r\nexport const follow = (userId) => ( {type: FOLLOW, userId} );\r\nexport const unfollow = (userId) => ( {type: UNFOLLOW, userId} );\r\nexport const setUsers = (users) => ( {type: SET_USERS, users} );\r\nexport const setCurrentPage = (currentPage) => ( {type: SET_CURRENT_PAGE, currentPage} );\r\nexport const setTotalUsersCount = (totalCount) => ( {type: SET_TOTAL_USERS_COUNT, totalCount} );\r\nexport const toggleIsFetching = (isFetching) => ( {type: TOGGLE_IS_FETCHING, isFetching} );\r\nexport const loadMore = (users) => ( {type: LOAD_MORE, users} );\r\nexport const toggleFollowingProgress = (isProgress, userId) => ( {type: TOGGLE_IS_FOLLOWING_PROGRESS, isProgress, userId} );\r\n\r\n\r\n\r\n// Thunk - Санк (санка)\r\n// В Санки диспатчим Action Creators\r\n// UI вызываем getUsers, чтобы создать САНКУ\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(1));\r\n\r\n    let response = await usersAPI.getUsers(currentPage, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));   \r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n}\r\n\r\nexport const loadMoreUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n       \r\n        dispatch(setCurrentPage(page));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let response = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(loadMore(response.items));\r\n    }\r\n}\r\n\r\nexport const followUser = (id) => {\r\n    return async (dispatch) => {\r\n       \r\n        dispatch(toggleFollowingProgress(true, id));\r\n        \r\n        let response = await usersAPI.followToUser(id);\r\n\r\n        // Если сервер не выдал ошибки, меняем state (подписываемся)\r\n        if(response.resultCode === 0) {\r\n            dispatch(follow(id));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id));\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const unfollowUser = (id) => {\r\n    return async (dispatch) => {\r\n       \r\n        dispatch(toggleFollowingProgress(true, id));\r\n        \r\n        let response = await usersAPI.unfollowToUser(id)\r\n        \r\n        // Если сервер не выдал ошибки, меняем state (подписываемся)\r\n        if(response.resultCode === 0) {\r\n            dispatch(unfollow(id));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id));\r\n \r\n    }\r\n}\r\n\r\n\r\nexport default userReducer;","import { usersAPI } from './../../api/api';\r\nimport { profileAPI } from './../../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello!', likesCount: 10},\r\n        {id: 2, message: 'Это переданный...', likesCount: 0},\r\n        {id: 3, message: '...параметр Props,', likesCount: 5},\r\n        {id: 4, message: 'а это значение переменной...', likesCount: 24}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {id: 5, message: action.newPost, likesCount: 0}\r\n                ]\r\n            };\r\n        case SET_USER_PROFILE: \r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS: \r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST: \r\n        return {\r\n            ...state,\r\n            posts: state.posts.filter(p => p.id != action.postId)\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPost) => ( {type: ADD_POST, newPost} );\r\nexport const setUserProfile = (profile) => ( {type: SET_USER_PROFILE, profile} );\r\nexport const setStatus = (status) => ( {type: SET_STATUS, status} );\r\nexport const deletePost = (postId) => ( {type: DELETE_POST, postId} );\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n        \r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n        \r\n    let responce = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(responce));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.updateStatus(status);\r\n    if(response.resultCode === 0) {\r\n        dispatch(setStatus(status)); // если ошибок нет, диспатчим setStatus\r\n    }     \r\n\r\n}\r\n\r\nexport default profileReducer;","import * as axios from 'axios';\r\n\r\n// создаем настройки axios\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '97448058-f2b7-4bf4-961c-f51a6ff67ab6'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    // Получить всех пользователей\r\n    //{ withCredentials: true} - делаем запрос от авторизованного пользователя\r\n\r\n    getUsers(currentPage, pageSize) {\r\n        return instanse\r\n                .get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data)\r\n    },\r\n\r\n    // Подписка на Юзера\r\n    // POST запрос на подписку на пользователя.\r\n    // Только после ответа сервера, что мы подписались, меняем state.\r\n\r\n    // в POST запросе настройки передаются ТРЕТЬИМ параметром\r\n    // { withCredentials: true }\r\n    \r\n    followToUser(id) {\r\n        return instanse\r\n                .post(`follow/${id}`)\r\n                .then(response => response.data)       \r\n     },\r\n    \r\n    \r\n    // Отписка от Юзера\r\n    // Для отписки, мы шлем DELETE запрос\r\n    // Настройки передаются ВТОРЫМ параметром { withCredentials: true }\r\n    \r\n    unfollowToUser(id) {\r\n        return instanse\r\n                .delete(`follow/${id}`)\r\n                .then(response => response.data)      \r\n     },\r\n\r\n      // получить страницу пользователя\r\n\r\n    getProfile(userId) {\r\n        console.warn('Используется старый метод');\r\n        return profileAPI.getProfile(userId);\r\n     }\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n\r\n    // получить страницу пользователя\r\n\r\n    getProfile(userId) {\r\n        return instanse\r\n            .get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instanse\r\n            .get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        // у PUT и POST запросов есть второй параметр\r\n        return instanse\r\n            .put(`profile/status`, { status })\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    // Запрос на аудентификацию\r\n   \r\n    me() {\r\n        return instanse\r\n                .get(`auth/me`)\r\n                .then(response => response.data)        \r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instanse\r\n                .post(`auth/login`, { email, password, rememberMe })\r\n                .then(response => response.data)        \r\n    },\r\n    logout() {\r\n        return instanse\r\n                .delete(`auth/login`)\r\n                .then(response => response.data)        \r\n    }\r\n}","// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    users: [\r\n        {id: 1, name: 'Андрей'},\r\n        {id: 2, name: 'Валера'},\r\n        {id: 3, name: 'Анна'},\r\n        {id: 4, name: 'Сергей'}],\r\n    messages: [\r\n        {id: 1, messages: 'Привет!'},\r\n        {id: 2, messages: 'Как дела?'},\r\n        {id: 3, messages: 'Yo!'},\r\n        {id: 4, messages: 'Пока!'}]\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    \r\n    ///не имеем право менять state, поэтому работаем с копией \r\n    \r\n    switch(action.type){\r\n        // case UPDATE_NEW_MESSAGE_BODY: \r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body\r\n        //     };\r\n        case SEND_MESSAGE: \r\n            let body = action.newMessage;\r\n            // debugger;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, messages: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessage) => ( {type: SEND_MESSAGE, newMessage} );\r\n\r\n// export const updateNewMessageBodyActionCreator = (text) => \r\n//     ( {type: UPDATE_NEW_MESSAGE_BODY, body: text} );\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navigation_nav__z1Zji\"};","module.exports = __webpack_public_path__ + \"static/media/loader.d452daac.gif\";"],"sourceRoot":""}