{"version":3,"sources":["utils/validators/validators.js","components/common/formsControls/formsControls.js","components/common/formsControls/formsControls.module.css","hoc/withAuthRedirect.js","components/Pages/Dialogs/dialogs.module.css","components/Pages/Dialogs/Messages/Message/message.module.css","components/Pages/Dialogs/Messages/messages.module.css","components/Pages/Dialogs/Messages/Message/message.jsx","components/Pages/Dialogs/Messages/messages.jsx","components/Pages/Dialogs/dialogs.jsx","components/Pages/Dialogs/dialogsContainer.jsx"],"names":["requiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","css","formControl","Input","module","exports","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Message","dialogs__messages_message","messages","maxLength10","MessagesReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","Messages","dialogsPage","map","el","key","id","dialogs__messages","formData","console","log","messagesForm","onSendMessageClick","Dialogs","item","users","dialogs__items_item","active","onNewMessageChange","compose","newMessageBody","dispatch","newMessage","sendMessageActionCreator"],"mappings":"gGACA,oEACO,IAAMA,EAAgB,SAAAC,GACzB,IAAGA,EACH,MAAO,sGAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAAOD,EAAW,MAAM,sGAAN,OAA6BA,EAA7B,wD,oJCJlBE,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAIC,aAAeL,EAAS,IAAII,IAAIF,MAAM,KACtD,6BAEI,8CAAcL,EAAWE,KAE5BC,GAAY,8BAAOF,EAAKI,SAKxBI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAIC,aAAeL,EAAS,IAAII,IAAIF,MAAM,KACtD,6BAEI,2CAAWL,EAAWE,KAEzBC,GAAY,8BAAOF,EAAKI,U,oBCzBrCK,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,6GCIvEC,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SA0BZE,IAjBiB,SAACC,GAAe,IAEtCC,EAFqC,iLAKnC,OAAIC,KAAKjB,MAAMY,OAER,kBAACG,EAAcE,KAAKjB,OAFG,kBAAC,IAAD,CAAUkB,GAAI,eALT,GAEXC,IAAMJ,WAYtC,OAFqCK,YAAQV,EAARU,CAAiCJ,K,oBC3B1ER,EAAOC,QAAU,CAAC,kBAAoB,mCAAmC,eAAiB,gCAAgC,OAAS,0B,oBCAnID,EAAOC,QAAU,CAAC,0BAA4B,6C,oBCA9CD,EAAOC,QAAU,CAAC,kBAAoB,sC,gGCYvBY,EATC,SAACrB,GAEb,OACI,yBAAKI,UAAWC,IAAIiB,2BACftB,EAAMuB,W,sDCEbC,EAAc9B,YAAiB,IAqB/B+B,EAAoBC,YAAU,CAAEC,KAAM,YAAlBD,EAnBL,SAAC1B,GAClB,OACI,0BAAM4B,SAAU5B,EAAM6B,cAKlB,kBAACC,EAAA,EAAD,CAAOC,YAAa,oGAAqBC,KAAM,eAAgBC,UAAWpC,IAC1EqC,SAAU,CAAC1C,IAAegC,KAC1B,6BACI,6CAkCDW,EAtBE,SAACnC,GAEd,IAAIuB,EAAWvB,EAAMoC,YAAYb,SAChCc,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAASC,IAAKD,EAAGE,GAAIjB,SAAUe,EAAGf,cAQ7C,OACI,yBAAKnB,UAAWC,IAAIoC,mBACflB,EACD,6BACI,kBAACE,EAAD,CAAmBG,SATd,SAACc,GACdC,QAAQC,IAAIF,EAASG,cACrB7C,EAAM8C,mBAAmBJ,EAASG,oB,QCZ3BE,EAzBC,SAAC/C,GAEb,IAAIgD,EAAOhD,EAAMoC,YAAYa,MAAMZ,KAAK,SAAAC,GACnC,OACQ,yBAAKlC,UAAWC,IAAI6C,oBAAoB,IAAI7C,IAAI8C,QAC7C,kBAAC,IAAD,CAASjC,GAAE,mBAAcoB,EAAGE,KAAOF,EAAGN,UAMtD,OACI,yBAAK5B,UAAWC,IAAIoC,mBAChB,6BAAMO,GACN,kBAAC,EAAD,CACII,mBAAoBpD,EAAMoD,mBAC1BN,mBAAoB9C,EAAM8C,mBAC1BV,YAAapC,EAAMoC,gB,iCCuBpBiB,sBACXjC,aApCkB,SAACT,GACnB,MAAO,CACHyB,YAAazB,EAAMyB,YACnBkB,eAAgB3C,EAAMyB,YAAYkB,mBAIjB,SAACC,GACtB,MAAO,CAKHT,mBAAoB,SAACU,GAAD,OAAgBD,EAAUE,YAAyBD,SAwB3E1C,IAFWuC,CAGbN","file":"static/js/5.eee15075.chunk.js","sourcesContent":["\r\n// requiredField - поле, обязательное для заполнения\r\nexport const requiredField = value => {\r\n    if(value) return undefined;\r\n    return 'Обязательное поле!';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length>maxLength) return `Не может привышать ${maxLength} символов`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport css from './formsControls.module.css';\r\n\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={css.formControl + (hasError?' '+css.error:'')}>\r\n            <div>\r\n                {/* Почему ...input см. в документации к redux-form */}\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={css.formControl + (hasError?' '+css.error:'')}>\r\n            <div>\r\n                {/* Почему ...input см. в документации к redux-form */}\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__1li7W\",\"error\":\"formsControls_error__3s6AV\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n// это HOC - компонент высшего порядка (Hight Order Component)\r\n// HOC - функция, которая принимет компонент и возвращает компонент\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            // Если не залогинился redirect на компонент Login\r\n            if(!this.props.isAuth) return <Redirect to={'/Login'} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__messages\":\"dialogs_dialogs__messages__209Bc\",\"dialogs__items\":\"dialogs_dialogs__items__QDzBj\",\"active\":\"dialogs_active__Tmyik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__messages_message\":\"message_dialogs__messages_message__2S0nH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__messages\":\"messages_dialogs__messages__1gpPK\"};","import React from 'react';\r\nimport css from './message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    // console.log(props.messages);\r\n    return (\r\n        <div className={css.dialogs__messages_message}>\r\n            {props.messages}\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Message from './Message/message'\r\nimport css from './messages.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/formsControls/formsControls';\r\n\r\n\r\n// props.handleSubmit метод из redux-form\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MessagesForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {/* <textarea\r\n                    value={ props.dialogsPage.newMessageBody }\r\n                    placeholder='Enter your message'\r\n                    onChange={ props.onNewMessageChange } /> */}\r\n            <Field placeholder={'Введите сообщение'} name={'messagesForm'} component={Textarea}\r\n            validate={[requiredField, maxLength10]} />\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n            \r\n            {/* <button onClick={ props.onSendMessageClick }>Send</button> */}\r\n        </form>\r\n    )\r\n}\r\n \r\n// { form: 'messages' } это уникальное имя формы, так как форм может быть много\r\nconst MessagesReduxForm = reduxForm({ form: 'messages' })(MessagesForm)\r\n\r\n\r\nconst Messages = (props) => {\r\n    // debugger;\r\n    let messages = props.dialogsPage.messages\r\n    .map(el => <Message key={el.id} messages={el.messages} />);\r\n    \r\n     // Необходимо передать эту функцию в HOC\r\n    const onSubmit = (formData) => {\r\n        console.log(formData.messagesForm);\r\n        props.onSendMessageClick(formData.messagesForm);\r\n    }\r\n    \r\n    return (\r\n        <div className={css.dialogs__messages}>\r\n            {messages}\r\n            <div>\r\n                <MessagesReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport css from './dialogs.module.css';\r\nimport Messages from './Messages/messages';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialogs = (props) => {\r\n   \r\n    let item = props.dialogsPage.users.map (el => \r\n        {return (\r\n                 <div className={css.dialogs__items_item+' '+css.active}>        \r\n                    <NavLink to={`/dialogs/${el.id}`}>{el.name}</NavLink>   \r\n                </div>)   \r\n        });\r\n\r\n\r\n\r\n    return (\r\n        <div className={css.dialogs__messages}>\r\n            <div>{item}</div>\r\n            <Messages\r\n                onNewMessageChange={props.onNewMessageChange}\r\n                onSendMessageClick={props.onSendMessageClick}\r\n                dialogsPage={props.dialogsPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","// import React from 'react';\r\nimport Dialogs from './dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessageActionCreator } from '../../../components/Redux/dialogsReducer';\r\nimport withAuthRedirect from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n//////////////////////////////// react-redux\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageBody: state.dialogsPage.newMessageBody\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // onNewMessageChange: (e) => {\r\n        //     let body = e.currentTarget.value;\r\n        //     dispatch( updateNewMessageBodyActionCreator(body) );\r\n        // },\r\n        onSendMessageClick: (newMessage) => dispatch( sendMessageActionCreator(newMessage) )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// это HOC - компонент высшего порядка (Hight Order Component)\r\n// оборачиваем им Dialogs для того чтобы вынести логику Редиректа\r\n// и использовать ее в других компонентах\r\n// компонент Dialogs стала с (with) AuthRedirect`ом\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// connect имеет свой метод subscribe,\r\n// который следит,\r\n// когда измениться state (dialogsPage) из mapStateToProps\r\n/////////////////////////////////////////////////\r\n// export default DialogsContainer;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}